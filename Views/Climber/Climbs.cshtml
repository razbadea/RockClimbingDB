@using RockClimbingDb.Models
@model List<Climb>

@{
    ViewBag.Title = $"{User.Identity.Name}'s Climbs";
}

<h2>Climbs</h2>

<p>
    @Html.ActionLink("Create New", "AddClimb")
</p>



<table class="table" id="ClimbTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Route.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Route.Grade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Route.Rating)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Route.Sector.Crag.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Route.Sector.Crag.Area.Country.Name)
            </th>


            <th></th>
        </tr>
    </thead>


    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Route.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Route.Grade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Route.Rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Route.Sector.Crag.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Route.Sector.Crag.Area.Country.Name)
                </td>
                <td>
                    @Html.ActionLink("Edit", "EditClimb", new { id = item.Id }) |
                    @Html.ActionLink("Details", "GetClimbDetails", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "DeleteClimb", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
    

</table>
<script>
    $(document).ready(function () {
        $('#ClimbTable').DataTable();
    });
</script>